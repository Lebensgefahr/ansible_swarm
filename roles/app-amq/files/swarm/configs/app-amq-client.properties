spring.flyway.enabled=true
datasource.type=jndi

ds.app-amq-client.driverClassName=com.mysql.jdbc.Driver
ds.app-amq-client.url=jdbc:mysql://mariadb/app_amq?autoReconnect=true&rewriteBatchedStatements=true
ds.app-amq-client.username=app
ds.app-amq-client.password=sqlsql

ds.app-mw.driverClassName=com.mysql.jdbc.Driver
ds.app-mw.url=jdbc:mysql://mariadb/app?autoReconnect=true
ds.app-mw.username=app
ds.app-mw.password=sqlsql

ds.app-video-service.driverClassName=com.mysql.jdbc.Driver
ds.app-video-service.url=jdbc:mysql://mariadb/app_video?autoReconnect=true
ds.app-video-service.username=app
ds.app-video-service.password=sqlsql

server.port=8080

################################################################################
# HIBERNATE
ds.app-amq-client.hibernate.jdbc.batch_size=20
################################################################################
# RABBIT

rabbit.connection.host=rabbitmq
rabbit.connection.port=5672
rabbit.connection.vhost=/
rabbit.connection.username=amq_client
rabbit.connection.password=amq_client

# Consumers

rabbit.consumers.size=50

rabbit.consumers.exchange.name=amq.topic


rabbit.consumers.channelStatus.queue.name=monitoring.channelstatus.amq-client
rabbit.consumers.channelStatus.queue.durable=true
rabbit.consumers.channelStatus.queue.autoDelete=false
rabbit.consumers.channelStatus.routingKey=monitoring.channelstatus.#



rabbit.consumers.snapshot.queue.name=monitoring.snapshot.amq-client
rabbit.consumers.snapshot.queue.durable=true
rabbit.consumers.snapshot.queue.autoDelete=false
rabbit.consumers.snapshot.routingKey=monitoring.snapshot.#


rabbit.consumers.restreamer.queue.name=monitoring.restreamer.amq-client
rabbit.consumers.restreamer.queue.durable=true
rabbit.consumers.restreamer.queue.autoDelete=false
rabbit.consumers.restreamer.routingKey=monitoring.restreamer.#


# Настройки очереди, из которой amq-client забирает события аналитики
rabbit.consumers.analytics.queue.name=monitoring.analytics.amq-client
rabbit.consumers.analytics.queue.durable=true
rabbit.consumers.analytics.queue.autoDelete=false
rabbit.consumers.analytics.routingKey=monitoring.analytics.#

# Для отложенной доставки событий применяется dead-letter-очередь, т.е. очередь, в которой события отлеживаются.
# Имя exchange, в которую amq-client отправляет события, требующие задержки
rabbit.producers.statServer.dlx.exchange.name=stat-server.dlx.fanout
# Настройки очереди, в которой отлеживаются события
rabbit.producers.statServer.dlx.queue.name=stat-server.dlx.queue
rabbit.producers.statServer.dlx.queue.durable=true
rabbit.producers.statServer.dlx.queue.autoDelete=false

# Время задержки между отправкой события rabbit и получением события из rabbit
rabbit.producers.statServer.dlx.delay.sec=3630

# Producers



rabbit.producers.statServer.enabled=true
rabbit.producers.statServer.exchange.name=stat-server.topic
rabbit.producers.statServer.queue.name=monitoring.statServerEvents.amq-client
rabbit.producers.statServer.queue.durable=true
rabbit.producers.statServer.queue.autoDelete=false
rabbit.producers.statServer.routingKey=monitoring.statServerEvents.#


################################################################################
# TOKEN-SERVICE

tokenService.enabled=true
tokenService.host=app-token
tokenService.port=8080
tokenService.path=/
tokenService.cache.enabled=true
tokenService.cache.size=1000
################################################################################

################################################################################
# PROPERTIES FROM PERSISTENT SETTINGS

skou.skouNotificationBatchSize=100
skou.useSkouNotificationStub=true
skou.skouNotificationPartialBatchSendingIntervalSec=60

sorm.sormNotificationBatchSize=100
sorm.useSormNotificationStub=true
sorm.sormNotificationPartialBatchSendingIntervalSec=60

log.logAmqEvents=false
log.logAmqErrors=false

camera.updateCameraStatus=false
camera.cameraStatusFlushIntervalSec=5
cache.extraInfoCacheSyncIntervalSec=600
################################################################################
# STATSERVER

statServer.enabled=false
statServer.host=ssr
statServer.port=3000
statServer.action=/streamer
